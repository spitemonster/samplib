@use "sass:math";

$rem: 16px;

@function strip-unit($num) {
	@return math.div($num, $num * 0 + 1);
}

@function convert-to-to_rem($value, $base-value: $rem) {
	$value: math.div(strip-unit($value), strip-unit($base-value)) * 1rem;
	@if ($value == 0rem) {
		$value: 0;
	} // Turn 0rem into 0
	@return $value;
}

// convert a given value to its rem counterpart
@function to_rem($values, $base-value: $rem) {
	$max: length($values);

	@if $max == 1 {
		@return convert-to-to_rem(nth($values, 1), $base-value);
	}

	$remValues: ();
	@for $i from 1 through $max {
		$remValues: append(
			$remValues,
			convert-to-to_rem(nth($values, $i), $base-value)
		);
	}
	@return $remValues;
}

@function em($values, $base-value: $rem) {
	$remValues: to_rem($values, $base-value: $rem);

	$max: length($remValues);

	@if $max == 1 {
		@return strip-unit(nth($remValues, 1)) * 1em;
	}

	$emValues: ();
	@for $i from 1 through $max {
		$emValues: append($emValues, strip-unit(nth($remValues, $i)) * 1em);
	}
	@return $emValues;
}

$threshold: 20%;